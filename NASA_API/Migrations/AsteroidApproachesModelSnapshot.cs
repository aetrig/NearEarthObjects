// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NASA_API;

#nullable disable

namespace NASA_API.Migrations
{
    [DbContext(typeof(AsteroidApproaches))]
    partial class AsteroidApproachesModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.14");

            modelBuilder.Entity("NASA_API.ApproachesDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("asteroidId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("date")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("orbiting_body")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ComplexProperty<Dictionary<string, object>>("miss_distance", "NASA_API.ApproachesDB.miss_distance#DistanceDB", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("astronomical")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("kilometers")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("lunar")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("miles")
                                .IsRequired()
                                .HasColumnType("TEXT");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("velocity", "NASA_API.ApproachesDB.velocity#VelocityDB", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("kilometers_per_hour")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("kilometers_per_second")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("miles_per_hour")
                                .IsRequired()
                                .HasColumnType("TEXT");
                        });

                    b.HasKey("Id");

                    b.HasIndex("asteroidId");

                    b.ToTable("approaches");
                });

            modelBuilder.Entity("NASA_API.AsteroidDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("is_potentially_hazardous")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("is_sentry_object")
                        .HasColumnType("INTEGER");

                    b.Property<double>("magnitude")
                        .HasColumnType("REAL");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nasa_id")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ComplexProperty<Dictionary<string, object>>("estimated_diameter", "NASA_API.AsteroidDB.estimated_diameter#Estimated_diameterDB", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<double>("estimated_diameter_max_feet")
                                .HasColumnType("REAL");

                            b1.Property<double>("estimated_diameter_max_km")
                                .HasColumnType("REAL");

                            b1.Property<double>("estimated_diameter_max_m")
                                .HasColumnType("REAL");

                            b1.Property<double>("estimated_diameter_max_miles")
                                .HasColumnType("REAL");

                            b1.Property<double>("estimated_diameter_min_feet")
                                .HasColumnType("REAL");

                            b1.Property<double>("estimated_diameter_min_km")
                                .HasColumnType("REAL");

                            b1.Property<double>("estimated_diameter_min_m")
                                .HasColumnType("REAL");

                            b1.Property<double>("estimated_diameter_min_miles")
                                .HasColumnType("REAL");
                        });

                    b.HasKey("Id");

                    b.ToTable("asteroids");
                });

            modelBuilder.Entity("NASA_API.ApproachesDB", b =>
                {
                    b.HasOne("NASA_API.AsteroidDB", "asteroid")
                        .WithMany()
                        .HasForeignKey("asteroidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("asteroid");
                });
#pragma warning restore 612, 618
        }
    }
}
